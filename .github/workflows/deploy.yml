name: Deploy Application
on:
  workflow_dispatch:

jobs:
  build-js-production:
    name: Build JavaScript/CSS for Production Server
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '15.x'
      - name: NPM Build
        run: |
          npm install
          npm run prod
      - name: Put built assets in Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: assets
          path: public

  deploy:
    name: Deploy Project
    runs-on: ubuntu-latest
    needs: [ build-js-production ]
    if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: Extract branch name and setup Env
        id: extract_branch
        shell: bash
        env:
          DOT_ENV_STAGING: ${{ secrets.DOT_ENV_STAGING }}
          DOT_ENV_PROD: ${{ secrets.DOT_ENV_PROD }}
          STAGING_PK: ${{ secrets.SSH_PRIVATE_KEY }}
          STAGING_KH: ${{ secrets.SSH_KNOWN_HOSTS }}
          LIVE_PK: ${{ secrets.SSH_PRIVATE_KEY_LIVE }}
          LIVE_KH: ${{ secrets.SSH_KNOWN_HOSTS_LIVE }}
        run: |
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
          if [ ${{ github.ref }} != 'refs/heads/master' ]; then
            echo "IS NOT the main branch"
            echo "DOT_ENV=$DOT_ENV_STAGING" >> $GITHUB_ENV
            echo "PK=$STAGING_PK" >> $GITHUB_OUTPUT
            echo "KH=$STAGING_KH" >> $GITHUB_OUTPUT
          else
            echo "IS the main branch"
            echo "DOT_ENV=$DOT_ENV_PROD" >> $GITHUB_ENV
            echo "PK=$LIVE_PK" >> $GITHUB_OUTPUT
            echo "KH=$LIVE_KH" >> $GITHUB_OUTPUT
          fi
      - uses: actions/checkout@v3
      - name: Fetch built assets from Artifacts
        uses: actions/download-artifact@v3
        with:
          name: assets
          path: public
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: '7.3'
          coverage: "none"
          tools: "deployer, composer:v2"
          extensions: "mbstring, ds, ssh2, imagick, dom, curl"
          ini-values: "memory_limit=-1, phar.readonly=0"
      - name: Composer install
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Setup Deployer
        uses: atymic/deployer-php-action@master
        with:
          ssh-private-key: ${{ steps.extract_branch.outputs.PK }}
          ssh-known-hosts: ${{ steps.extract_branch.outputs.KH }}
      - name: Deploy to Staging
        run: dep deploy ${{ steps.extract_branch.outputs.branch }} --branch="${{ steps.extract_branch.outputs.branch }}" -vv
      - uses: geekyeggo/delete-artifact@v2
        if: always()
        with:
          name: assets
